- name: Install packages for dn42 router
  apt:
    name:
    - git
    - iptables
    - rsync  # for synchronize module
    - ifupdown
    - cron

    # Tools to assist troubleshooting
    - dnsutils
    - mtr-tiny
    - tcpdump

    - bird2
    - wireguard
    # needed to use ansible become on an unprivileged user: https://docs.ansible.com/ansible/latest/user_guide/become.html#risks-of-becoming-an-unprivileged-user
    - acl
    state: latest
    install_recommends: yes
    update_cache: yes

# https://dn42.net/howto/networksettings
- name: Configure sysctl settings
  sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    state: present
    sysctl_file: /etc/sysctl.d/99-dn42.conf
  loop:
    - {name: 'net.ipv4.conf.default.rp_filter', value: '0'}
    - {name: 'net.ipv4.conf.all.rp_filter', value: '0'}
    - {name: 'net.ipv4.conf.all.forwarding', value: '1'}
    - {name: 'net.ipv6.conf.all.forwarding', value: '1'}

- name: Prepare Wireguard keys
  block:
  - name: Make sure /etc/wireguard exists
    file:
      path: "/etc/wireguard"
      state: directory
      mode: '0700'
  - name: Generate Wireguard private key
    shell: "wg genkey > /etc/wireguard/privatekey"
    args:
      creates: "/etc/wireguard/privatekey"
  - name: "Secure Wireguard private key"
    file:
      path: "/etc/wireguard/privatekey"
      mode: '0640'
      owner: root
      group: root
    ignore_errors: "{{ ansible_check_mode }}"
  - name: Generate Wireguard public key
    shell: "wg pubkey < /etc/wireguard/privatekey > /etc/wireguard/publickey"
    args:
      creates: "/etc/wireguard/publickey"

- name: Apply Bird service overrides
  block:
  - name: Create Bird service.d directory
    file:
      path: /etc/systemd/system/bird.service.d/
      state: directory
      owner: root
      group: root
      mode: 0755

  - name: Copy bird.service drop-in
    template:
      src: bird.service-override.conf.j2
      dest: /etc/systemd/system/bird.service.d/override.conf
      owner: root
      group: root
      mode: 0644
    notify: Restart Bird

- name: Create scripts dir for dn42
  file:
    path: "{{ automation_root_dir }}"
    state: directory
    mode: '0755'

- name: Create automation account for dn42 scripts
  user:
    name: "{{ automation_user }}"
    group: nogroup
    groups: bird
    system: true
    password: "!"
    home: "{{ automation_user_home }}"

- name: Install dn42 ROA sync script
  block:
  - name: Upload dn42 ROA sync script
    copy:
      src: dn42-update-roas.sh
      dest: "{{ automation_root_dir }}/dn42-update-roas.sh"
      owner: root
      group: adm
      mode: '0755'
  - name: Run dn42 ROA sync script
    command: "{{ automation_root_dir }}/dn42-update-roas.sh"
    become: yes
    become_user: bird
    ignore_errors: "{{ ansible_check_mode }}"
  - name: Create cron job for dn42 ROA sync script
    cron:
      name: "Pull dn42 ROA tables"
      minute: "5"
      job: "{{ automation_root_dir }}/dn42-update-roas.sh"
      user: bird
  when: "'dn42routers' in group_names or import_roa|default(False)"
